{"version":3,"sources":["store/config.js","containers/Calender/Header.js","containers/Calender/build.js","services/index.js","containers/Calender/Carousel.js","containers/Calender/Event.js","containers/Calender/Body.js","containers/Calender/index.js","App.js","reportWebVitals.js","index.js"],"names":["Global","apiUrl","treatments","Months","weeks","months3","Header","currentDate","getToday","next","prev","useState","animate","setAnimate","useEffect","setTimeout","className","getMonth","getFullYear","Button","onClick","Row","map","day","index","Col","xs","useCalendar","daysShort","monthNames","today","Date","todayFormatted","getDate","daysInWeek","selectedDate","setSelectedDate","selectedMonthLastDate","prevMonthLastDate","daysInMonth","firstDayInMonth","getDay","startingPoint","indexOf","prevMonthStartingPoint","currentMonthCounter","nextMonthCounter","rows","cols","calendarRows","i","j","classes","date","value","getPrevMonth","prevValue","getNextMonth","returnToday","API","axios","create","baseURL","data","api","getPosts","a","response","post","then","res","catch","error","Carousel","props","setIndex","id","src","events","Images","ImageUrl","TypeOfDay","returnDayTypes","rating","r","push","size","returnRating","Rating","timestamp","returnDate","CalendarDateTime","Text","length","Event","expanded","setExpanded","style","display","isToday","Body","setRows","setEvents","loadEvents","ResponseObjects","Posts","currentMonth","loadDate","val","temp","forEach","event","week","Calender","handleKeyPress","e","keyCode","document","addEventListener","WheelReact","config","up","down","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8QAkBeA,EAdF,CACTC,OAAS,sDACTC,WAAY,CACR,WAAa,KACb,oBAAsB,KACtB,aAAe,KACf,oBAAsB,KACtB,WAAe,KAEnBC,OAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACxHC,MAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDC,QAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QCR5F,SAASC,EAAT,GAAsD,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,KAAO,EACnBC,mBAAS,kBADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAmBjD,OARAC,qBAAU,WAEND,EAAW,kBACXE,YAAW,WACPF,EAAW,MACZ,OACJ,CAACN,IAGA,sBAAKS,UAAU,mBAAf,UACI,sBAAKA,UAAW,gBAAkBJ,EAAlC,UACI,gCACI,wBAAOI,UAAU,QAAjB,UAnBLhB,EAAOG,OAAOI,EAAYU,YAmBrB,QACA,gCAhBLV,EAAYW,mBAkBX,sBAAKF,UAAU,eAAf,UACI,cAACG,EAAA,EAAD,CAAQH,UAAU,YAAYI,QAAS,kBAAMZ,KAA7C,mBACA,cAACW,EAAA,EAAD,CAAQH,UAAU,UAAUI,QAAS,kBAAMV,KAA3C,SAAmD,cAAC,IAAD,MACnD,cAACS,EAAA,EAAD,CAAQH,UAAU,UAAUI,QAAS,kBAAMX,KAA3C,SAAmD,cAAC,IAAD,YAI3D,qBAAKO,UAAU,aAAf,SACI,cAACK,EAAA,EAAD,CAAKL,UAAU,WAAf,SACKhB,EAAOI,MAAMkB,KAAI,SAACC,EAAKC,GAAN,OACd,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAIV,UAAU,YAAtB,SAAmCO,c,WC2C5CI,EAjFK,WAiBlB,IAjB6E,IAA1DC,EAAyD,uDAA7C5B,EAAOG,OAAQ0B,EAA8B,uDAAjB7B,EAAOI,MAC5D0B,EAAQ,IAAIC,KACZC,EAAc,UAAMF,EAAMG,UAAZ,YAAyBH,EAAMb,WAAa,EAA5C,YAAiDa,EAAMZ,eACrEgB,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAHsC,EAIpCvB,mBAASmB,GAJ2B,mBAIrEK,EAJqE,KAIvDC,EAJuD,KAKtEC,EAAwB,IAAIN,KAAKI,EAAajB,cAAeiB,EAAalB,WAAa,EAAG,GAC1FqB,EAAoB,IAAIP,KAAKI,EAAajB,cAAeiB,EAAalB,WAAY,GAClFsB,EAAcF,EAAsBJ,UACpCO,EAAkB,IAAIT,KAAKI,EAAajB,cAAeiB,EAAalB,WAAY,GAAGwB,SACnFC,EAAgBR,EAAWS,QAAQH,GAAmB,EACxDI,EAAyBN,EAAkBL,UAAYC,EAAWS,QAAQH,GAAmB,EAC7FK,EAAsB,EACtBC,EAAmB,EACjBC,EAAO,EACPC,EAAO,EACPC,EAAe,GAEbC,EAAI,EAAGA,EAAIH,EAAO,EAAGG,IAC3B,IAAI,IAAIC,EAAI,EAAGA,EAAIH,EAAO,EAAGG,IACvBF,EAAaC,KACfD,EAAaC,GAAK,IAGX,IAANA,EACEC,EAAIT,GACLO,EAAaC,GAAb,sBAAsBD,EAAaC,IAAnC,CAAuC,CACrCE,QAAS,gBACTC,KAAK,GAAD,OAAKT,EAAL,YAA2D,IAA5BT,EAAalB,WAAmB,GAAKkB,EAAalB,WAAjF,YAA2H,IAA5BkB,EAAalB,WAAmBkB,EAAajB,cAAgB,EAAIiB,EAAajB,eACjLoC,MAAOV,KAETA,MAEAK,EAAaC,GAAb,sBAAsBD,EAAaC,IAAnC,CAAuC,CACrCE,QAAS,GACTC,KAAK,GAAD,OAAKR,EAAL,YAA4BV,EAAalB,WAAa,EAAtD,YAA2DkB,EAAajB,eAC5EoC,MAAOT,KAETA,KAEMK,EAAI,GAAKL,EAAsBN,EAAc,GACrDU,EAAaC,GAAb,sBAAsBD,EAAaC,IAAnC,CAAuC,CACrCE,QAAS,GACTC,KAAK,GAAD,OAAKR,EAAL,YAA4BV,EAAalB,WAAa,EAAtD,YAA2DkB,EAAajB,eAC5EoC,MAAOT,KAETA,MAEAI,EAAaC,GAAb,sBAAsBD,EAAaC,IAAnC,CAAuC,CACrCE,QAAS,gBACTC,KAAK,GAAD,OAAKP,EAAL,YAAyBX,EAAalB,WAAa,IAAM,GAAK,EAAIkB,EAAalB,WAAa,EAA5F,YAAiGkB,EAAalB,WAAa,IAAM,GAAKkB,EAAajB,cAAgB,EAAIiB,EAAajB,eACxLoC,MAAOR,KAETA,KAKN,IAAMS,EAAe,WACnBnB,GAAgB,SAAAoB,GAAS,OAAI,IAAIzB,KAAKyB,EAAUtC,cAAesC,EAAUvC,WAAa,EAAG,OAGrFwC,EAAe,WACnBrB,GAAgB,SAAAoB,GAAS,OAAI,IAAIzB,KAAKyB,EAAUtC,cAAesC,EAAUvC,WAAa,EAAG,OAGrFyC,EAAc,WAChBtB,EAAgBN,IAGpB,MAAO,CACLF,YACAC,aACAG,iBACAiB,eACAd,eACAoB,eACAE,eACAC,gB,QC/EEC,E,OAAMC,EAAMC,OAAO,CAAEC,QAAS9D,EAAOC,SAGrC8D,EAAO,CACT,eAAkB,CACd,CACI,KAAQ,CACJ,cAAiB,OACjB,QAAW,CACP,aAAgB,CAAC,UACjB,QAAU,GAEd,OAAU,CACN,aAAgB,CAAC,UACjB,QAAU,GAEd,GAAM,CACF,QAAU,GAGd,gBAAmB,CACf,aAAgB,EAAC,GACjB,QAAU,GAEd,OAAU,CACN,QAAU,GAErB,KAAQ,CACG,QAAU,GAEtB,OAAU,CACE,QAAU,GAEd,UAAY,CACP,QAAU,GAE3B,aAAgB,KAEJ,iBAAoB,CAChB,QAAU,EACV,KAAQ,cAEX,kBAAqB,SAkBhCC,EAAM,CACRC,SAbU,uCAAG,4BAAAC,EAAA,6DACZC,EAAW,KADC,SAEVR,EAAIS,KAAK,GAAIL,GAClBM,MAAK,SAAUC,GACfH,EAAWG,KAEXC,OAAM,SAAUC,GAChBL,EAAWK,KAPI,gCASTL,GATS,2CAAH,sD,wBC5Cd,SAASM,EAASC,GAAQ,IAAD,EACG/D,mBAAS,GADZ,mBAChBa,EADgB,KACTmD,EADS,KAyBvB,OACE,sBAAKC,GAAG,WAAR,UACI,cAAC,IAAD,CAAY5D,UAAS,mBAAuB,GAATQ,EAAa,UAAY,IAAMJ,QAAS,kBAAMuD,EAASnD,EAAQ,MAClG,sBAAKR,UAAU,OAAf,UACI,qBAAK6D,IAAKH,EAAMI,OAAOtD,GAAOuD,OAAO,GAAGC,SAAUhE,UAAU,QAC5D,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,UAAf,SACS0D,EAAMI,OAAOtD,GAAOyD,UAAU3D,KAAI,SAACC,EAAK2B,GAAN,OAjBlC,SAAC3B,EAAK2B,GAC3B,OAAQ,qBAAKlC,UAAW,WAAWhB,EAAOE,WAAWqB,GAA7C,SAA4DvB,EAAOE,WAAWqB,IAAtB2B,GAiBxCgC,CAAe3D,EAAK2B,QAGhC,qBAAKlC,UAAU,SAAf,SAjCO,SAACmE,GAEpB,IADA,IAAIC,EAAI,GACAlC,EAAI,EAAIA,GAAK,EAAIA,IAClBA,GAAKiC,EACJC,EAAEC,KAAK,cAAC,IAAD,CAAYrE,UAAU,cAAcsE,KAAM,MAEjDF,EAAEC,KAAK,cAAC,IAAD,CAAYrE,UAAU,kBAAkBsE,KAAM,MAG7D,OAAOF,EAyBUG,CAAab,EAAMI,OAAOtD,GAAOgE,aAG1C,qBAAKxE,UAAU,WAAf,SArBS,SAACqC,GAClB,IAAIoC,EAAY,IAAI1D,KAAKsB,GAEzB,OADmBoC,EAAUxD,UAAW,IAAMjC,EAAOK,QAAQoF,EAAUxE,YAAc,KAAMwE,EAAUvE,cAmBlEwE,CAAWhB,EAAMI,OAAOtD,GAAOmE,oBAC1D,qBAAK3E,UAAU,OAAf,SAAuB0D,EAAMI,OAAOtD,GAAOoE,UAG/C,cAAC,IAAD,CAAQ5E,UAAS,mBAAcQ,EAAQ,GAAKkD,EAAMI,OAAOe,OAAS,UAAY,IAAMzE,QAAS,kBAAMuD,EAASnD,EAAQ,SC3C5H,SAASsE,EAAMpB,GAAQ,IAAD,EACc/D,oBAAS,GADvB,mBACXoF,EADW,KACDC,EADC,KAmBlB,OACQ,sBAAKpB,GAAG,QAAR,UAEI,sBAAK5D,UAAU,YAAYiF,MAAO,CAACC,QAASH,EAAW,GAAK,QAA5D,UACI,qBAAK/E,UAAU,aAAaI,QAAS,kBAAM4E,GAAaD,IAAxD,SACI,cAAC,IAAD,CAAgB/E,UAAU,YAE9B,cAACyD,EAAD,CAAUK,OAAQJ,EAAMI,YAG5B,sBAAK1D,QAAS,kBAAM4E,GAAaD,IAAjC,UACI,sBAAK/E,UAAU,SAAf,UACI,qBAAKA,UAAU,SAAf,SA5BC,SAACmE,GAElB,IADA,IAAIC,EAAI,GACAlC,EAAI,EAAIA,GAAK,EAAIA,IAClBA,GAAKiC,EACJC,EAAEC,KAAK,cAAC,IAAD,CAAYrE,UAAU,iBAE7BoE,EAAEC,KAAK,cAAC,IAAD,CAAYrE,UAAU,qBAGrC,OAAOoE,EAoBcG,CAAab,EAAMI,OAAO,GAAGU,UAElC,sBAAMxE,UAAS,iBAAY0D,EAAMyB,QAAU,kBAAoB,IAA/D,SAAsEzB,EAAMnD,SAEhF,qBAAKsD,IAAKH,EAAMI,OAAO,GAAGC,OAAO,GAAGC,SAAUhE,UAAU,QACxD,qBAAKA,UAAU,YAAf,SACK0D,EAAMI,OAAO,GAAGG,UAAU3D,KAAI,SAACC,EAAKC,GAAN,OAvB5B,SAACD,EAAKC,GACzB,OAAQ,qBAAKR,UAAW,WAAWhB,EAAOE,WAAWqB,GAA7C,SAAgEvB,EAAOE,WAAWqB,IAA1BC,GAuB5C0D,CAAe3D,EAAKC,cCzChD,SAAS4E,EAAK1B,GAAQ,IAAD,EACO/D,mBAAS,IADhB,mBACVoC,EADU,KACJsD,EADI,OAEa1F,mBAAS,IAFtB,mBAEVC,EAFU,KAEDC,EAFC,OAGWF,mBAAS,IAHpB,mBAGVmE,EAHU,KAGFwB,EAHE,KAKXC,EAAU,uCAAG,4BAAArC,EAAA,sEAEEP,EAAIM,WAFN,QAEXF,EAFW,SAIXuC,EAAUvC,EAAKA,KAAKyC,gBAAgB,GAAGC,OAJ5B,2CAAH,qDAQhB3F,qBAAU,WAENuF,EAAQ,IACR,IAHY,eAGJnD,GACJmD,GAAQ,SAAAtD,GAAI,4BAAQA,GAAR,CAAc2B,EAAMgC,aAAaxD,SADzCA,EAAI,EAAIA,EAAI,EAAIA,IAAK,EAArBA,GAKRrC,EAAW,kBACXE,YAAW,WACPF,EAAW,MACZ,KAEkB,IAAlBiE,EAAOe,QACNU,MAEL,CAAC7B,EAAMgC,aAAc5B,IAExB,IAAM6B,EAAW,SAACC,GAEd,IAAIC,EAAO,GAOX,OANA/B,EAAOgC,SAAQ,SAACC,GACZ,IAAItB,EAAY,IAAI1D,KAAKgF,EAAMpB,kBACpBF,EAAUxD,UAAW,KAAOwD,EAAUxE,WAAW,GAAK,IAAKwE,EAAUvE,gBACpE0F,EAAIvD,MACZwD,EAAKxB,KAAK0B,MAEA,GAAfF,EAAKhB,OACI,uBAAQ7E,UAAS,sBAAkBJ,EAAlB,YAA6BgG,EAAIvD,OAASqB,EAAM5C,MAAQ,kBAAoB,IAA7F,SAAoG8E,EAAItD,QAG5G,cAACwC,EAAD,CAAOhB,OAAQ+B,EAAMtF,IAAKqF,EAAItD,MAAO6C,QAASS,EAAIvD,OAASqB,EAAM5C,SAM7E,OAAkB,GAAfiB,EAAK8C,OACI,6BAGR,qBAAKjB,GAAG,OAAR,SACK7B,EAAKzB,KAAI,SAAC0F,EAAMxF,GAAP,OACN,qBAAKR,UAAU,WAAf,SACMgG,EAAK1F,KAAI,SAACsF,EAAK1D,GAAN,OACP,qBAAKlC,UAAS,cAAc,GAALkC,EAAS,SAAW,GAA7B,YAAmD,KAAhB0D,EAAIxD,QAAiB,SAAW,IAAjF,SACKuD,EAASC,IAD8E1D,OAFrE1B,Q,qBCpD/C,SAASyF,IAAY,IAAD,EACuGtF,IAA/GsB,EADQ,EACRA,aAAcd,EADN,EACMA,aAAcH,EADpB,EACoBA,eAAuCyB,GAD3D,EACoC7B,UADpC,EAC+CC,WAD/C,EAC2D4B,cAAcF,EADzE,EACyEA,aAAcG,EADvF,EACuFA,YAGjGwD,EAAiB,SAACC,GACJ,IAAbA,EAAEC,QACD3D,IACiB,IAAb0D,EAAEC,SACN7D,KAkBR,OAfAzC,oBAAS,sBAAC,sBAAAoD,EAAA,sDACNmD,SAASC,iBAAiB,UAAWJ,GAAgB,GAD/C,2CAEP,IAIHK,IAAWC,OAAO,CACdC,GAAI,WACAlE,KAEJmE,KAAM,WACFjE,OAKJ,8CAAKmB,GAAG,YAAe2C,IAAWzC,QAAlC,cACI,cAACxE,EAAD,CAAQC,YAAa4B,EAAc3B,SAAU,kBAAMkD,KAAejD,KAAM,kBAAMgD,KAAgB/C,KAAO,kBAAM6C,OAC3G,cAAC6C,EAAD,CAAMM,aAAczD,EAAcnB,MAAOE,QC7BtC2F,MARf,WACE,OACE,qBAAK3G,UAAU,MAAf,SACE,cAACiG,EAAD,OCOSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BX,M","file":"static/js/main.4dea0836.chunk.js","sourcesContent":["/*\n    * Contains Global Config Data\n*/\n\nlet Global = {\n    apiUrl : \"https://quinncareapidev.azurewebsites.net/api/graph\",\n    treatments: {\n        \"Hair Cut\" : \"Cu\",\n        \"Protein Treatment\" : \"Pr\",\n        \"Hair Color\" : \"HC\",\n        \"Deep Conditioning\" : \"DC\",\n        \"Clarifying\" : \"C\"\n    },\n    Months : [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    weeks : [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months3 : [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n}\n\nexport default Global;","/* Calendar Header Component */\n\nimport React, {useState, useEffect} from 'react';\nimport { Row, Col, Button } from 'reactstrap';\nimport { GrNext, GrPrevious } from 'react-icons/gr';\nimport Global from '../../store/config';\n\nfunction Header({currentDate, getToday, next, prev}) {\n    const [animate, setAnimate] = useState('data-animation');\n\n    const getMonth = () => {\n        return Global.Months[currentDate.getMonth()]\n    }\n\n    const getYear = () => {\n        return currentDate.getFullYear()\n    }\n\n    useEffect(() => {\n        //Setting Appear Animation\n        setAnimate('date-animation')\n        setTimeout(() => {\n            setAnimate('');\n        }, 1000);\n    }, [currentDate])\n\n    return(\n        <div className=\"header-container\">\n            <div className={\"current-date \" + animate }>\n                <div>\n                    <label className=\"month\">{getMonth()}, </label>\n                    <label>{getYear()}</label>\n                </div>\n                <div className=\"current-date\">\n                    <Button className=\"today-btn\" onClick={() => getToday()}>Today</Button>\n                    <Button className=\"day-btn\" onClick={() => prev()}><GrPrevious /></Button>\n                    <Button className=\"day-btn\" onClick={() => next()}><GrNext /></Button>\n                </div>\n                \n            </div>\n            <div className=\"week-group\">\n                <Row className=\"week-row\">\n                    {Global.weeks.map((day, index) => (\n                        <Col xs=\"3\" className=\"week-item\">{day}</Col>\n                    ))}\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport {Header};","//Custom Hook for generating Calendar Dates\n\nimport { useState} from 'react';\nimport Global from '../../store/config';\n\nconst useCalendar = (daysShort = Global.Months, monthNames = Global.weeks) => {\n  const today = new Date();\n  const todayFormatted = `${today.getDate()}-${today.getMonth() + 1}-${today.getFullYear()}`;\n  const daysInWeek = [1, 2, 3, 4, 5, 6, 0];\n  const [selectedDate, setSelectedDate] = useState(today);\n  const selectedMonthLastDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0);\n  const prevMonthLastDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 0);\n  const daysInMonth = selectedMonthLastDate.getDate();\n  const firstDayInMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1).getDay();\n  const startingPoint = daysInWeek.indexOf(firstDayInMonth) + 1;\n  let prevMonthStartingPoint = prevMonthLastDate.getDate() - daysInWeek.indexOf(firstDayInMonth) + 1;\n  let currentMonthCounter = 1;\n  let nextMonthCounter = 1;\n  const rows = 6;\n  const cols = 7;\n  const calendarRows = {};\n\n  for(let i = 1; i < rows + 1; i++) {\n    for(let j = 1; j < cols + 1; j++) {\n      if(!calendarRows[i]) {\n        calendarRows[i] = [];\n      }\n      \n      if(i === 1) {\n        if(j < startingPoint) {\n          calendarRows[i] = [...calendarRows[i], {\n            classes: 'in-prev-month',\n            date: `${prevMonthStartingPoint}-${selectedDate.getMonth() === 0 ? 12 : selectedDate.getMonth()}-${selectedDate.getMonth() === 0 ? selectedDate.getFullYear() - 1 : selectedDate.getFullYear()}`,\n            value: prevMonthStartingPoint\n          }];\n          prevMonthStartingPoint++;\n        }else {\n          calendarRows[i] = [...calendarRows[i], {\n            classes: '',\n            date: `${currentMonthCounter}-${selectedDate.getMonth() + 1}-${selectedDate.getFullYear()}`,\n            value: currentMonthCounter\n          }];\n          currentMonthCounter++;\n        }\n      }else if( i > 1 && currentMonthCounter < daysInMonth + 1 ) {\n        calendarRows[i] = [...calendarRows[i], {\n          classes: '',\n          date: `${currentMonthCounter}-${selectedDate.getMonth() + 1}-${selectedDate.getFullYear()}`,\n          value: currentMonthCounter\n        }];\n        currentMonthCounter++;\n      }else {\n        calendarRows[i] = [...calendarRows[i], {\n          classes: 'in-next-month',\n          date: `${nextMonthCounter}-${selectedDate.getMonth() + 2 === 13 ? 1 : selectedDate.getMonth() + 2}-${selectedDate.getMonth() + 2 === 13 ? selectedDate.getFullYear() + 1 : selectedDate.getFullYear()}`,\n          value: nextMonthCounter\n        }];\n        nextMonthCounter++;\n      }\n    }\n  }\n\n  const getPrevMonth = () => {\n    setSelectedDate(prevValue => new Date(prevValue.getFullYear(), prevValue.getMonth() - 1, 1));\n  }\n\n  const getNextMonth = () => {\n    setSelectedDate(prevValue => new Date(prevValue.getFullYear(), prevValue.getMonth() + 1, 1));\n  }\n\n  const returnToday = () => {\n      setSelectedDate(today)\n  }\n\n  return {\n    daysShort,\n    monthNames,\n    todayFormatted,\n    calendarRows,\n    selectedDate,\n    getPrevMonth,\n    getNextMonth,\n    returnToday\n  }\n}\n\nexport default useCalendar;","/*API SERVICES*/\nimport Global from '../store/config';\nimport axios from 'axios';\nconst API = axios.create({ baseURL: Global.apiUrl });\n\n//Sample Api Request Object for testing\nconst data = {\n    \"RequestObjects\": [\n        {\n            \"Post\": {\n                \"OperationType\": \"Read\",                \n                \"Privacy\": {\n                    \"SearchValues\": [\"Public\"],\n                    \"Return\": true\n                },      \n                \"UserId\": {\n                    \"SearchValues\": [\"assign\"],\n                    \"Return\": false\n                },               \n                \"id\": {\n                    \"Return\": true\n                },\n                \n                \"IsCalendarEntry\": {\n                    \"SearchValues\": [true],\n                    \"Return\": true\n                },\n                \"Images\": { \n                    \"Return\": true\n                },\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t \"Text\": {\n                    \"Return\": true \n                },\n\t\t\t\t\t\t\t\t\"Rating\": {\n                    \"Return\": true                    \n                },\n                \"TypeOfDay\":{\n                     \"Return\": true\n                },    \t\t\t\t\n\t\t\t\t\"MaxItemCount\": \"25\",              \n                                            \n                \"CalendarDateTime\": { \n                    \"Return\": true, \n                    \"Sort\": \"Descending\" \n                },                                \n                 \"ContinuationToken\": null                \n            }\n        }\n    ]    \n}\n\nconst getPosts = async ()=>{\n\tlet response = null\n\tawait API.post('', data)\n\t.then(function (res) {\n\t\tresponse = res\n\t})\n\t.catch(function (error) {\n\t\tresponse = error\n\t})\n\treturn response;\n}\n\nconst api = {\n    getPosts : getPosts\n}\n\nexport {api as API}\n","/* Carousel Component */\n\nimport React, {useState} from 'react';\nimport { FcNext, FcPrevious } from 'react-icons/fc';\nimport {AiFillStar} from 'react-icons/ai';\nimport Global from '../../store/config';\n\nfunction Carousel(props) {\n  const [index, setIndex] = useState(0);\n\n  const returnRating = (rating) => {\n    let r = []\n    for(let i = 1 ; i <= 5 ; i++){\n        if(i <= rating)\n            r.push(<AiFillStar className=\"filled-star\" size={20} />)\n        else\n            r.push(<AiFillStar className=\"not-filled-star\" size={20} />)\n    }\n        \n    return r\n  }\n  \n  const returnDayTypes = (day, i) => {\n    return (<div className={\"dayType \"+Global.treatments[day]} key={i}>{Global.treatments[day]}</div>)\n  }\n\n  const returnDate = (date) => {\n    let timestamp = new Date(date)\n    let calendarDate = timestamp.getDate() +' ' + Global.months3[timestamp.getMonth()] + ', '+ timestamp.getFullYear()\n    return calendarDate\n  }\n\n  return (\n    <div id=\"Carousel\">\n        <FcPrevious className={`iterator ${index == 0 ? 'disable' : ''}`} onClick={() => setIndex(index - 1)} />\n        <div className=\"card\">\n            <img src={props.events[index].Images[0].ImageUrl} className=\"img\" />\n            <div className=\"highlights\">\n                <div className=\"typeDay\">\n                        {props.events[index].TypeOfDay.map((day, i) => (\n                            returnDayTypes(day, i)\n                        ))}\n                </div>\n                <div className=\"rating\">\n                    {returnRating(props.events[index].Rating)}\n                </div>\n            </div>\n            <div className=\"date-now\">{returnDate(props.events[index].CalendarDateTime)}</div>\n            <div className=\"desc\">{props.events[index].Text}</div>\n        </div>\n\n        <FcNext className={`iterator ${index + 1 == props.events.length ? 'disable' : ''}`} onClick={() => setIndex(index + 1)} />\n    </div>\n  );\n}\n\nexport {Carousel};\n","/* Event Tile of Calendar */\n\nimport React, {useState} from 'react';\nimport { MdHighlightOff } from \"react-icons/md\";\nimport {AiFillStar} from 'react-icons/ai';\nimport Global from '../../store/config';\nimport { Carousel } from './Carousel';\n\nfunction Event(props) {\n    const [expanded, setExpanded] = useState(false)\n    \n    const returnRating = (rating) => {\n        let r = []\n        for(let i = 1 ; i <= 5 ; i++){\n            if(i <= rating)\n                r.push(<AiFillStar className=\"filled-star\" />)\n            else\n                r.push(<AiFillStar className=\"not-filled-star\"/>)\n        }\n            \n        return r\n    }   \n\n    const returnDayTypes = (day, index) => {\n        return (<div className={\"dayType \"+Global.treatments[day]} key={index}>{Global.treatments[day]}</div>)\n    }\n\n    return (\n            <div id=\"Event\">\n                {/* Event Carousel */}\n                <div className=\"preloader\" style={{display: expanded ? '' : 'none'}}>\n                    <div className=\"close-back\" onClick={() => setExpanded(!expanded)}>\n                        <MdHighlightOff className=\"close\" />\n                    </div>\n                    <Carousel events={props.events} />\n                </div>\n\n                <div onClick={() => setExpanded(!expanded)}>\n                    <div className=\"header\">\n                        <div className=\"rating\">\n                            {returnRating(props.events[0].Rating)}\n                        </div>\n                        <span className={`daynum ${props.isToday ? 'highlight-today' : ''}`}>{props.day}</span>\n                    </div>\n                    <img src={props.events[0].Images[0].ImageUrl} className=\"img\" />\n                    <div className=\"typeOfDay\">\n                        {props.events[0].TypeOfDay.map((day, index) => (\n                            returnDayTypes(day, index)\n                        ))}\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport {Event};\n","/* Calendar Body */\n\nimport React, {useEffect, useState} from 'react';\nimport { API } from '../../services';\nimport { Event } from './Event';\n\nfunction Body(props) {\n    const [rows, setRows] = useState([])\n    const [animate, setAnimate] = useState('')\n    const [events, setEvents] = useState([])\n    \n    const loadEvents = async() => {\n        //Fetching Events from API\n        let data = await API.getPosts()\n        if(data){\n            setEvents(data.data.ResponseObjects[0].Posts)\n        }\n    }\n\n    useEffect(() => {\n        //Fetching Calendar days from custom hook\n        setRows([])\n        for(let i = 1 ; i < 7 ; i++){\n            setRows(rows => [...rows, props.currentMonth[i]])\n        }\n\n        //Setting Animation\n        setAnimate('date-animation')\n        setTimeout(() => {\n            setAnimate('');\n        }, 1000);\n\n        if(events.length === 0){\n            loadEvents()\n        }\n    }, [props.currentMonth, events])\n\n    const loadDate = (val) => {\n        //Matching Calendar date with event date\n        let temp = []\n        events.forEach((event) => {\n            let timestamp = new Date(event.CalendarDateTime)\n            let date = timestamp.getDate() +'-' + (timestamp.getMonth()+1) + '-'+ timestamp.getFullYear()\n            if(date === val.date)\n                temp.push(event)\n        })\n        if(temp.length == 0)\n            return (<label  className={`day-element ${ animate} ${val.date === props.today ? 'highlight-today' : ''}`}>{val.value}</label>);\n        else{\n            return(\n                <Event events={temp} day={val.value} isToday={val.date === props.today}/>\n            )\n        }\n           \n    }\n\n    if(rows.length == 0)\n        return (<></>)\n\n    return (\n        <div id=\"Body\">\n            {rows.map((week, index) => (\n                <div className=\"week-row\" key={index}>\n                     {week.map((val, i) => (\n                        <div className={`day ${i == 0 ? 'sunday' : ''} ${val.classes !== '' ? 'opaque' : ''}`} key={i}>\n                            {loadDate(val)}\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport {Body};\n","/*\n    * Entry Point of Calendar component\n*/\n\nimport React, {useEffect, useState} from 'react'\nimport { Header } from './Header';\nimport useCalendar from './build';\nimport { Body } from './Body';\nimport WheelReact from 'wheel-react';\n\nfunction Calender() {\n    const { calendarRows, selectedDate, todayFormatted, daysShort, monthNames, getNextMonth, getPrevMonth, returnToday } = useCalendar();\n\n    // Change Month on Up and Down Arrow\n    const handleKeyPress = (e) => {\n        if(e.keyCode == 40)\n            getNextMonth()\n        else if(e.keyCode == 38)\n            getPrevMonth()\n    }\n\n    useEffect(async() => {\n        document.addEventListener(\"keydown\", handleKeyPress, false);\n    }, [])\n\n\n    // For Scrolling through Mouse wheel\n    WheelReact.config({\n        up: () => {\n            getPrevMonth()\n        },\n        down: () => {\n            getNextMonth()\n        }\n      });\n\n    return (\n        <div id=\"Calender\" {...WheelReact.events}>\n            <Header currentDate={selectedDate} getToday={() => returnToday()} next={() => getNextMonth()} prev= {() => getPrevMonth()} />\n            <Body currentMonth={calendarRows} today={todayFormatted} />\n        </div>\n    )\n}\n\nexport { Calender };\n\n","import { Calender } from './containers';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calender />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}